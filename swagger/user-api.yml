swagger: "2.0"
info:
  description: "Users Profiles manangement"
  version: "1.0.0"
  title: "Swagger Users"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/v1"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
  /login:
    post:
      tags:
      - "login"
      summary: "logged user user"
      description: "This can only be done by the logged in user."
      operationId: "loginUser"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "login"
        in: "formData"
        description: "user login"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "user password"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserToken"
        "401":
          description: "Invalid login or password supplied"
  /user/{id}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
definitions:
  UserToken:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      token:
        type: "string"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      login:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"