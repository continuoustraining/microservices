cache:
  paths:
    - vendor
    - build

variables:
  DOCKER_REGISTRY: 500954975820.dkr.ecr.us-east-1.amazonaws.com
  AWS_DEFAULT_REGION: us-east-1
  APP_NAME: cursus-ecr-demo

stages:
  - build_stage
  - deploy_stage

build:
  image: php:7.3
  stage: build_stage
  only:
    - master
    - tags
  script:
    - apt-get update -y
    - apt-get install -y gettext wget git zip unzip
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - php composer.phar  install --no-dev
    - envsubst < config.php.dist > config.php
    - mkdir -p build
    - cp ./index.php build/ && cp ./healthcheck.php build/ && cp ./Dockerfile build/ && cp -Rf ./lib build/ && cp -Rf ./ci build/ && cp -Rf ./specs build/ && cp -Rf ./vendor build/
  environment: 
    name: production
  artifacts:
    untracked: true
    paths:
      - build
      
deploy: 
  stage: deploy_stage
  artifacts:
    untracked: true
  only:
    - master
    - tags
  environment: 
    name: production
  before_script:
    - sudo apt-get install -y awscli
    - aws --version
    - docker --version
  script:
    - cd build && docker build -t $DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID . 
    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - docker push $DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID
  